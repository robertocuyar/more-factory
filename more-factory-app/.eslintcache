[{"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/index.js":"1","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/App.js":"2","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/NavBar.js":"3","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/index.js":"4","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/UserTool.js":"5","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/slotReducer.js":"6","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/actions/types.js":"7","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/initialStates.js":"8","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/TabOptions.js":"9","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/Field.js":"10","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/Footer.js":"11","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/MiningMenu.js":"12","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/MachinesMenu.js":"13","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/BuildMenu.js":"14","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/OrdersMenu.js":"15","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/UpgradesMenu.js":"16","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/coalMineReducer.js":"17","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/actions/index.js":"18","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/ironMineReducer.js":"19","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/copperMineReducer.js":"20","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/user_tools/UserBag.js":"21","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/user_tools/UserInventory.js":"22","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/user_tools/UserStats.js":"23","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/mines/MineInventoryContainer.js":"24","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/user_tools/InventoryItem.js":"25","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/limeMineReducer.js":"26","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/mines/Mines.js":"27","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/machinesReducer.js":"28","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/machines/Machine.js":"29","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/util/invManager.js":"30","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/util/outInv.js":"31","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/util/machProcess.js":"32","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/buildReducer.js":"33","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/builds/BuildOption.js":"34","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/util/invDisplay.js":"35","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/userStatReducer.js":"36"},{"size":570,"mtime":1617241329798,"results":"37","hashOfConfig":"38"},{"size":1393,"mtime":1614024072212,"results":"39","hashOfConfig":"38"},{"size":1259,"mtime":1612999018364,"results":"40","hashOfConfig":"38"},{"size":709,"mtime":1616631951606,"results":"41","hashOfConfig":"38"},{"size":2343,"mtime":1616516454078,"results":"42","hashOfConfig":"38"},{"size":285,"mtime":1613677842402,"results":"43","hashOfConfig":"38"},{"size":609,"mtime":1617310870789,"results":"44","hashOfConfig":"38"},{"size":6372,"mtime":1617388505163,"results":"45","hashOfConfig":"38"},{"size":2533,"mtime":1616457832412,"results":"46","hashOfConfig":"38"},{"size":962,"mtime":1617389279613,"results":"47","hashOfConfig":"38"},{"size":142,"mtime":1612676070735,"results":"48","hashOfConfig":"38"},{"size":991,"mtime":1617386604390,"results":"49","hashOfConfig":"38"},{"size":887,"mtime":1617133659218,"results":"50","hashOfConfig":"38"},{"size":1439,"mtime":1617388281580,"results":"51","hashOfConfig":"38"},{"size":153,"mtime":1613936924542,"results":"52","hashOfConfig":"38"},{"size":159,"mtime":1613937007253,"results":"53","hashOfConfig":"38"},{"size":221,"mtime":1614713052840,"results":"54","hashOfConfig":"38"},{"size":1394,"mtime":1617310758538,"results":"55","hashOfConfig":"38"},{"size":223,"mtime":1614717092670,"results":"56","hashOfConfig":"38"},{"size":226,"mtime":1614732755669,"results":"57","hashOfConfig":"38"},{"size":261,"mtime":1614828944294,"results":"58","hashOfConfig":"38"},{"size":584,"mtime":1614979508611,"results":"59","hashOfConfig":"38"},{"size":1528,"mtime":1617246569883,"results":"60","hashOfConfig":"38"},{"size":945,"mtime":1617049057546,"results":"61","hashOfConfig":"38"},{"size":1062,"mtime":1614980480006,"results":"62","hashOfConfig":"38"},{"size":232,"mtime":1614829638794,"results":"63","hashOfConfig":"38"},{"size":5829,"mtime":1616437847900,"results":"64","hashOfConfig":"38"},{"size":559,"mtime":1617243036036,"results":"65","hashOfConfig":"38"},{"size":6240,"mtime":1617248097413,"results":"66","hashOfConfig":"38"},{"size":621,"mtime":1616435489148,"results":"67","hashOfConfig":"38"},{"size":1216,"mtime":1617247575803,"results":"68","hashOfConfig":"38"},{"size":2137,"mtime":1617247425015,"results":"69","hashOfConfig":"38"},{"size":457,"mtime":1616615848842,"results":"70","hashOfConfig":"38"},{"size":4819,"mtime":1616618972514,"results":"71","hashOfConfig":"38"},{"size":287,"mtime":1616525848692,"results":"72","hashOfConfig":"38"},{"size":389,"mtime":1617311089744,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1xcmo9u",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"76"},"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/index.js",[],["161","162"],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/App.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/NavBar.js",["163"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport factoryIcon from \"../img/more_factory_icon.png\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function ButtonAppBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <img src={factoryIcon} alt=\"\"/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        More-Factory\n                    </Typography>\n                    {/*<Button color=\"inherit\">Login</Button>*/}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\n","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/index.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/UserTool.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/slotReducer.js",["164"],"import {INVENTORY_SLOTS} from \"../actions/types\";\nimport {defaultBag} from \"./initialStates\";\n\nexport default (state = defaultBag, action) => {\n    switch (action.type){\n        case INVENTORY_SLOTS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/actions/types.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/initialStates.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/TabOptions.js",["165"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport BuildMenu from \"./BuildMenu\";\nimport MachinesMenu from \"./MachinesMenu\";\nimport MiningMenu from \"./MiningMenu\";\nimport OrdersMenu from \"./OrdersMenu\";\nimport UpgradesMenu from \"./UpgradesMenu\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport default function CenteredTabs() {\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div>\n            <Tabs\n                id={\"tab-control\"}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"user options tab\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n            >\n                <Tab label=\"Mine\" {...a11yProps(0)}/>\n                <Tab label=\"Machines\" {...a11yProps(1)} />\n                <Tab label=\"Build\" {...a11yProps(2)} />\n                <Tab label=\"Orders\" {...a11yProps(3)} disabled />\n                <Tab label=\"Upgrades\" {...a11yProps(4)} disabled />\n            </Tabs>\n            <TabPanel value={value} index={0}>\n                <MiningMenu id={\"mining-menu\"}/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <MachinesMenu/>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <BuildMenu/>\n            </TabPanel>\n            <TabPanel value={value} index={3}>\n                <OrdersMenu/>\n            </TabPanel>\n            <TabPanel value={value} index={4}>\n              <UpgradesMenu/>\n            </TabPanel>\n        </div>\n    );\n}","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/Field.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/Footer.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/MiningMenu.js",["166"],"import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Mines from \"./mines/Mines\";\nimport {defaultMines} from \"../reducers/initialStates\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    }\n}));\n\nconst MiningMenu = () => {\n    const classes = useStyles();\n    const tier = useSelector(state => state.userStats);\n\n    const mineDisplay = ()=> {\n        return defaultMines.mines.map(mine => {\n            if(tier.tier >= mine.tier) {\n                return (\n                    <Grid key={mine.content} item xs={6}>\n                        <Mines type={mine.content}/>\n                    </Grid>\n                )\n            }\n        });\n\n    }\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                {mineDisplay()}\n            </Grid>\n        </div>\n    )\n}\n\nexport default MiningMenu;","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/MachinesMenu.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/BuildMenu.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/OrdersMenu.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/UpgradesMenu.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/coalMineReducer.js",["167"],"import {MINE_COAL} from \"../actions/types\";\n\nexport default (state = null, action) =>{\n    switch(action.type){\n        case MINE_COAL:\n            return action.payload;\n        default:\n            return state;\n    }\n}","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/actions/index.js",["168"],"import {\n    INVENTORY_SLOTS,\n    MINE_COAL,\n    MINE_COPPER,\n    MINE_IRON,\n    MINE_LIMESTONE,\n    MACHINE_RENDER,\n    OPERATE_MACHINE,\n    BUILD_RENDER,\n    ADD_MACHINE, REMOVE_OPTION, STAT_RENDER, POWER_CHANGE, UPGRADE_TIER\n} from \"./types\";\n\nexport const inventorySlots = slots => {\n    return {type: INVENTORY_SLOTS, payload: slots}\n}\n\nexport const mineCoal = coal => {\n    return {type: MINE_COAL, payload: coal}\n}\n\nexport const mineIron = iron => {\n    return {type: MINE_IRON, payload: iron}\n}\n\nexport const mineCopper = copper =>{\n    return {type: MINE_COPPER, payload: copper}\n}\n\nexport const mineLimestone = limestone =>{\n    return {type: MINE_LIMESTONE, payload: limestone}\n}\n\nexport const machineRender = machines => {\n    return {type: MACHINE_RENDER, payload: machines}\n}\n\nexport const operateMachine = (inventory, time) => dispatch => {\n    setTimeout(()=>{\n        dispatch({type: OPERATE_MACHINE, payload: inventory})\n    }, time);\n}\n\nexport const buildRender = build => {\n    return {type: BUILD_RENDER, payload: build}\n}\n\nexport const addMachine = machine => {\n    return {type: ADD_MACHINE, payload: machine}\n}\n\nexport const removeOption = option => {\n    return {type: REMOVE_OPTION, payload: option}\n}\n\nexport const statRender = stats => {\n    return {type: STAT_RENDER, payload: stats}\n}\n\nexport const upgradeTier = ()=>{\n    return {type: UPGRADE_TIER, payload: 1}\n}","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/ironMineReducer.js",["169"],"import {MINE_IRON} from \"../actions/types\";\n\nexport default (state = null , action) =>{\n    switch(action.type){\n        case MINE_IRON:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/copperMineReducer.js",["170"],"import {MINE_COPPER} from \"../actions/types\";\n\nexport default (state = null, action) =>{\n    switch(action.type){\n        case MINE_COPPER:\n            return action.payload;\n        default :\n            return state;\n    }\n}","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/user_tools/UserBag.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/user_tools/UserInventory.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/user_tools/UserStats.js",["171"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nfunction createData(name, value) {\n    return { name, value };\n}\n\n\nexport default function UserStats() {\n    const classes = useStyles();\n    const userStat = useSelector(state=> state.userStats);\n    const power = useSelector( state=> state.machines.power);\n    const powerDisplay = `${power.current} / ${power.capacity} MW`\n    const rows = [\n        createData(\"Power\", powerDisplay),\n    ];\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.value}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/mines/MineInventoryContainer.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/user_tools/InventoryItem.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/limeMineReducer.js",["172"],"import {MINE_LIMESTONE} from \"../actions/types\";\n\nexport default (state = null, action) => {\n    switch(action.type){\n        case MINE_LIMESTONE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/mines/Mines.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/machinesReducer.js",["173"],"import {ADD_MACHINE, MACHINE_RENDER, OPERATE_MACHINE} from \"../actions/types\";\nimport {defaultMachine} from \"./initialStates\";\n\nexport default (state = defaultMachine, action)=>{\n    switch(action.type){\n        case MACHINE_RENDER:\n            return action.payload;\n        case OPERATE_MACHINE:\n            return action.payload;\n        case ADD_MACHINE:\n            const {build, ...actualObj} = action.payload;\n            state.machines = [...state.machines, actualObj];\n            return {...state};\n        default:\n            return state;\n    }\n}","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/machines/Machine.js",["174"],"import React, {useEffect} from 'react';\nimport {makeStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport green from \"../../img/green_light.png\";\nimport red from \"../../img/red_light.png\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {outInv} from \"../../util/outInv\";\nimport {inventorySlots, machineRender, powerChange, operateMachine} from \"../../actions\";\nimport {machProcess} from \"../../util/machProcess\";\nimport {invManager} from \"../../util/invManager\";\nimport {invDisplay} from \"../../util/invDisplay\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    large: {\n        width: theme.spacing(8),\n        height: theme.spacing(8),\n        margin: theme.spacing(2)\n    },\n    containerRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(2),\n            width: theme.spacing(16),\n            height: theme.spacing(16),\n        },\n    }\n}));\n\nconst Machine = ({machine})=> {\n    const classes = useStyles();\n    const inv = useSelector(state=> state.slotsInv);\n    const mach = useSelector(state=> state.machines);\n    const user = useSelector(state=> state.userStats);\n    const dispatch = useDispatch();\n    let resultMachines = {...mach, machines: []};\n\n    useEffect(()=>{\n        if(machine.isOn){\n            const changeState = machProcess(machine.content, machine.input, machine.output, mach, user.power);\n                dispatch(operateMachine(changeState, machine.process));\n        }\n    });\n    const toggleOn = ()=>{\n        resultMachines.machines = mach.machines.map(item=>{\n            if(item.content === machine.content){\n                item.isOn = true;\n            }\n            return item;\n        });\n        dispatch(machineRender(resultMachines));\n    }\n\n    const inputChange = inputReq => {\n        let res = outInv(inputReq, machine.content, inv, mach, 80);\n        dispatch(inventorySlots(res.inventory));\n        dispatch(machineRender(res.machine));\n    }\n\n    const inventoryMove = output =>{\n        if(output.numContent === 0){\n            return;\n        }\n        let newInv = {\n            slots: invManager(output, inv)\n        }\n        dispatch(inventorySlots(newInv));\n        resultMachines.machines = mach.machines.map(item=>{\n            if(item.content === machine.content){\n                item.output = item.output.map(product => {\n                    if(product.content === output.content){\n                        product.numContent = output.numContent;\n                    }\n                    return product;\n                });\n            }\n            return item;\n        });\n        dispatch(machineRender(resultMachines));\n    }\n\n    const ioDisplay = (machArr, type)=>{\n\n        const buttonType = (content, req)=> {\n            if (content === 'Current Power Production'){\n                return <h3>{content}</h3>\n            }\n            return type === 'input' ? <Button variant={\"outlined\"} onClick={()=> inputChange(req)}>Add {content}</Button> : <Button variant={\"outlined\"} onClick={()=> inventoryMove(req)}>Take {content}</Button>\n        }\n\n        return machArr.map(item =>{\n            return (\n                    <Grid item container justify={'center'} alignItems={'center'} direction={'column'} spacing={1}>\n                        <Grid item xs={12}>\n                            {buttonType(item.content, item)}\n                        </Grid>\n                        <Grid item xs={12}>\n                            <div className={classes.containerRoot}>\n                                <Paper className={\"inventory-box\"}>\n                                    {invDisplay(item)}\n                                </Paper>\n                            </div>\n                        </Grid>\n                    </Grid>\n                )\n        });\n    }\n\n    const contentDisplay = ()=>{\n        const light = ()=>{\n            if (machine.isOn){\n                return (\n                    <React.Fragment>\n                    <Grid item>\n                        <Button variant={\"outlined\"} disabled>Turn on</Button>\n                    </Grid>\n                <Grid item>\n                    <img src={green} alt={\"Green Light\"}/>\n                </Grid>\n                    </React.Fragment>\n                )\n            } else{\n                return (\n                <React.Fragment>\n                    <Grid item>\n                        <Button variant={\"outlined\"} onClick={()=> toggleOn()}>Turn on</Button>\n                    </Grid>\n                    <Grid item>\n                        <img src={red} alt = \"Red Light\"/>\n                    </Grid>\n                </React.Fragment>\n                )\n            }\n        }\n        return (\n            <React.Fragment>\n                <Grid item xs={12}>\n                    <img src={machine.imgUrl} alt={machine.content}/>\n                </Grid>\n                <Grid item xs={12}>\n                    <h1>\n                        {machine.content}\n                    </h1>\n                </Grid>\n                <Grid item xs={12}>\n                    <p>\n                        {machine.description}\n                    </p>\n                </Grid>\n                <Grid item container alignItems={\"center\"} justify={\"center\"} spacing={2} xs={12}>\n                    {light()}\n                </Grid>\n            </React.Fragment>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container alignItems={'center'}>\n                <Grid item container xs={3} justify={'center'} alignItems={'center'} direction={\"column\"} spacing={2}>\n                    {ioDisplay(machine.input, 'input')}\n                </Grid>\n                <Grid item container xs={6} justify={'center'} alignItems={'center'} direction={'column'} spacing={0}>\n                    {contentDisplay()}\n                </Grid>\n                <Grid item container xs={3} justify={'center'}>\n                    {ioDisplay(machine.output, 'output')}\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Machine;","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/util/invManager.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/util/outInv.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/util/machProcess.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/buildReducer.js",["175"],"import {BUILD_RENDER, REMOVE_OPTION} from \"../actions/types\";\nimport {defaultBuild} from \"./initialStates\";\n\nexport default (state = defaultBuild, action)=>{\n    switch(action.type){\n        case BUILD_RENDER:\n            return action.payload;\n        case REMOVE_OPTION:\n            state.machines = state.machines.filter(option => option.content !== action.payload.content)\n            return {...state}\n        default:\n            return state;\n    }\n}","/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/components/builds/BuildOption.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/util/invDisplay.js",[],"/Users/robertocuyar/IdeaProjects/more-factory/more-factory-app/src/reducers/userStatReducer.js",["176"],"import {defaultUser} from \"./initialStates\";\nimport {STAT_RENDER, UPGRADE_TIER} from \"../actions/types\";\n\nexport default (state = defaultUser, action)=>{\n    switch(action.type){\n        case STAT_RENDER:\n            return action.payload;\n        case UPGRADE_TIER:\n            state.tier += action.payload;\n            return {...state}\n        default:\n            return state;\n    }\n}",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":4,"column":1,"nodeType":"187","endLine":11,"endColumn":2},{"ruleId":"181","severity":1,"message":"188","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":19,"column":44,"nodeType":"191","messageId":"192","endLine":19,"endColumn":46},{"ruleId":"185","severity":1,"message":"186","line":3,"column":1,"nodeType":"187","endLine":10,"endColumn":2},{"ruleId":"181","severity":1,"message":"193","line":10,"column":46,"nodeType":"183","messageId":"184","endLine":10,"endColumn":58},{"ruleId":"185","severity":1,"message":"186","line":3,"column":1,"nodeType":"187","endLine":10,"endColumn":2},{"ruleId":"185","severity":1,"message":"186","line":3,"column":1,"nodeType":"187","endLine":10,"endColumn":2},{"ruleId":"181","severity":1,"message":"194","line":24,"column":11,"nodeType":"183","messageId":"184","endLine":24,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":3,"column":1,"nodeType":"187","endLine":10,"endColumn":2},{"ruleId":"185","severity":1,"message":"186","line":4,"column":1,"nodeType":"187","endLine":17,"endColumn":2},{"ruleId":"181","severity":1,"message":"195","line":10,"column":40,"nodeType":"183","messageId":"184","endLine":10,"endColumn":51},{"ruleId":"185","severity":1,"message":"186","line":4,"column":1,"nodeType":"187","endLine":14,"endColumn":2},{"ruleId":"185","severity":1,"message":"186","line":4,"column":1,"nodeType":"187","endLine":14,"endColumn":2},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Typography' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'POWER_CHANGE' is defined but never used.","'userStat' is assigned a value but never used.","'powerChange' is defined but never used.","no-global-assign","no-unsafe-negation"]